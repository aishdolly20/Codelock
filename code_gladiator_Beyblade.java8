/* 
 * Enter your code here. Read input from STDIN. Print your output to STDOUT. 
 * Your class should be named CandidateCode.
*/

import java.io.*;
import java.util.*;
public class CandidateCode {
    public static void main(String args[] ) throws Exception {
    int t;
    Scanner sc=new Scanner(System.in);
	t=sc.nextInt();
	while(t>0){
	int n,i,j;
	n=sc.nextInt();
	int []g=new int[n];
    int []o=new int[n];
    int x,count=0;
	for(i=0;i<n;i++)
	g[i]=sc.nextInt();
	for(i=0;i<n;i++)
	o[i]=sc.nextInt();
    CandidateCode cc=new CandidateCode();
	cc.heapSort(g,n); 
	cc.heapSort(o,n); 
	for(i=n-1;i>=0;i--)
	{
		if(g[i]<=o[i]){
			x=g[0];
			for(j=1;j<=i;j++)
			g[j-1]=g[j];
			g[i]=x;
		}
	}
	for(i=0;i<n;i++){
		if(g[i]>o[i])
		count++;
	}
	System.out.println(count);
	t--;
	}

   }
   void heapify(int []arr, int n, int i) 
{   
	int largest = i; // Initialize largest as root 
    int l = 2 * i + 1; // left = 2*i + 1 
    int r = 2 * i + 2; // right = 2*i + 2 
    if (l < n && arr[l] > arr[largest]) 
        largest = l;  
    if (r < n && arr[r] > arr[largest]) 
        largest = r; 
    if (largest != i) { 
     int swap = arr[i]; 
            arr[i] = arr[largest]; 
            arr[largest] = swap; 
        heapify(arr, n, largest); 
    } 
} 
void heapSort(int []arr, int n) 
{ 
    for (int i = n / 2 - 1; i >= 0; i--) 
        heapify(arr, n, i); 
    for (int i = n - 1; i >= 0; i--) { 
       int temp = arr[0]; 
            arr[0] = arr[i]; 
            arr[i] = temp; 
        heapify(arr, i, 0); 
    } 
}
}
